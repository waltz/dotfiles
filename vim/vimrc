" Clear all existing autocommands.
autocmd!

call plug#begin()

Plug 'morhetz/gruvbox'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'mileszs/ack.vim'
Plug 'janko-m/vim-test'
Plug '907th/vim-auto-save'
Plug 'vim-ruby/vim-ruby'
Plug 'airblade/vim-gitgutter'
Plug 'mg979/vim-visual-multi', {'branch': 'master'}
Plug 'JamshedVesuna/vim-markdown-preview'

Plug 'pangloss/vim-javascript'
Plug 'HerringtonDarkholme/yats.vim'

Plug 'neoclide/coc.nvim', {'branch': 'release'}

call plug#end()

set nocompatible
filetype plugin indent on
syntax on
set t_Co=256
set backspace=2
set expandtab
set tabstop=3 shiftwidth=2 softtabstop=2
set autoindent
set number
set guifont=JetBrains\ Mono:h14
set termguicolors
set autoread
set autowrite
set hidden
autocmd! GUIEnter * set vb t_vb=
set directory=~/.vim/backups//
set completeopt=menu,preview
set timeout timeoutlen=1000 ttimeoutlen=100

colorscheme gruvbox 
set background=dark

" Specific comment styles
autocmd Filetype typescript,javascript,typescriptreact,javascriptreact setlocal commentstring=//\ %s

let g:gitgutter_enabled = 1

" Configure CtrlP
set runtimepath^=~/.vim/plugged/ctrlp.vim
set wildignore+=*/tmp/*,*.so,*.swp,*.zip

if executable("ag")
  set grepprg=ag\ --nogroup\ --nocolor
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

let g:ctrlp_working_path_mode = 'rw'
let g:ctrlp_cmd = 'CtrlPMixed'

map <C-\> :NERDTreeToggle<CR>
let NERDTreeShowHidden = 1
let g:NERDTreeChDirMode = 2
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

let g:vim_jsx_pretty_colorful_config = 1

" Open vim-test results in iTerm.
let test#strategy = 'iterm'

nmap <silent> t<C-n> :TestNearest<CR>
nmap <silent> t<C-f> :TestFile<CR>
nmap <silent> t<C-s> :TestSuite<CR>
nmap <silent> t<C-l> :TestLast<CR>
nmap <silent> t<C-g> :TestVisit<CR>

if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

let g:auto_save = 1
let g:auto_save_events = ["InsertLeave", "TextChanged"]

" Highlight Fastlane as Ruby
autocmd BufNewFile,BufRead Fastfile,Matchfile,Appfile,Gymfile,Pluginfile set syntax=ruby

let g:coc_global_extensions = [
  \ 'coc-tsserver',
  \ 'coc-tslint-plugin',
  \ 'coc-eslint',
  \ 'coc-prettier',
  \ 'coc-highlight',
  \ ]

autocmd CursorHold * silent call CocActionAsync('highlight')

" Vim Markdown Preview Hotkey
let vim_markdown_preview_hotkey='<C-m>'
let vim_markdown_preview_browser='Google Chrome'
